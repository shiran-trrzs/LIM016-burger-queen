{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../_services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction FormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"small\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.messageError);\n  }\n}\n\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    constructor(authService) {\n      this.authService = authService;\n      this.requestFailed = false;\n      this.emailFailed = false;\n      this.passwordFailed = false;\n      this.validateForm = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required])\n      });\n    }\n\n    ngOnInit() {}\n\n    login(form) {\n      this.loginData = {\n        email: form.email,\n        password: form.password\n      };\n      this.authService.loginForm(this.loginData).subscribe({\n        next: response => {\n          // if (response.token) {\n          this.authService.setUser(response); // }\n        },\n        error: err => {\n          this.requestFailed = true;\n          this.messageError = err.error.message;\n        }\n      });\n    }\n\n  }\n\n  FormComponent.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n\n  FormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[\"id\", \"btns-login\", 1, \"btns-form\", 3, \"formGroup\", \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"fix-position\"], [1, \"form-email-container\"], [\"id\", \"btn-email\", 1, \"btn-login\"], [1, \"fa-solid\", \"fa-envelope\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"first\", \"placeholder\", \"Email\", 1, \"login-box\"], [\"email\", \"\"], [1, \"form-password-container\"], [\"id\", \"btn-password\", 1, \"btn-login\"], [1, \"fa-solid\", \"fa-lock\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"second\", \"placeholder\", \"Password\", 1, \"login-box\"], [\"password\", \"\"], [\"class\", \"general-message-container\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\"], [1, \"general-message-container\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.login(ctx.validateForm.value);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵelement(5, \"i\", 5)(6, \"input\", 6, 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9);\n        i0.ɵɵelement(10, \"i\", 10)(11, \"input\", 11, 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, FormComponent_div_13_Template, 3, 1, \"div\", 13);\n        i0.ɵɵelementStart(14, \"button\", 14);\n        i0.ɵɵtext(15, \" Log in \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.validateForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.requestFailed == true);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i3.NgIf],\n    styles: [\"[_ngcontent-%COMP%]:root{--animate-delay: 2s}.btns-form[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-left:48%;align-items:flex-end;height:35vh;padding-top:100px;padding-bottom:52px}.btns-form[_ngcontent-%COMP%]   .btn-login[_ngcontent-%COMP%]{display:flex;align-items:center;padding-left:7%;width:22vw;height:5.2vh;background:rgba(255,255,255,.465);border-radius:30px;text-align:center;color:#f4a42b;font-size:25px;border:2.8px solid #F4A42B;margin-bottom:19px}.login-box[_ngcontent-%COMP%]{border-style:none;background:rgba(255,255,255,0);font-size:18px;margin-left:4%;margin-bottom:-1%;width:80%}input[_ngcontent-%COMP%]::placeholder{color:#979696;font-size:18px}input[_ngcontent-%COMP%]:focus{outline:none;background-color:#fff0}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus, input[_ngcontent-%COMP%]:-webkit-autofill:active{-webkit-transition:background-color 5000s ease-in-out 0s;transition:background-color 5000s ease-in-out 0s}.btn[_ngcontent-%COMP%]{width:9vw;background:linear-gradient(90deg,#FFE259 15.1%,#FFA751 85.42%);border-radius:30px;border-style:none;text-align:center;font-size:23px;color:#fff;padding:13px}.fix-position[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center}.general-message-container[_ngcontent-%COMP%]{margin-top:-40px;margin-bottom:25px;font-size:1.3rem;color:peru;font-weight:700;animation:bounce}.messageEmailError[_ngcontent-%COMP%]{margin:0}.form-email-container[_ngcontent-%COMP%], .form-password-container[_ngcontent-%COMP%]{margin-bottom:50px;display:flex;flex-direction:column;align-items:center}.form-email-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], .form-password-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{font-size:1.3rem;color:peru;font-weight:700}@media (min-width: 1700px){.btns-form[_ngcontent-%COMP%]{margin-left:36%}}@media (max-width: 769px){.btns-form[_ngcontent-%COMP%]{margin-left:auto;padding-bottom:0;margin-top:40%}.form-email-container[_ngcontent-%COMP%], .form-password-container[_ngcontent-%COMP%]{margin-bottom:25px}.form-email-container[_ngcontent-%COMP%]   .btn-login[_ngcontent-%COMP%], .form-password-container[_ngcontent-%COMP%]   .btn-login[_ngcontent-%COMP%]{width:37vw}.btn[_ngcontent-%COMP%]{width:18vw}}\"]\n  });\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}