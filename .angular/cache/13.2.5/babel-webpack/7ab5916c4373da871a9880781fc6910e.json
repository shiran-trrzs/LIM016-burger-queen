{"ast":null,"code":"function cov_2oqq1xa99v() {\n  var path = \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\_services\\\\auth.service.ts\";\n  var hash = \"201c588d3523d88b56ca1b9515fe51302b9e63ef\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\_services\\\\auth.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 7,\n          column: 18\n        },\n        end: {\n          line: 106,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 9,\n          column: 8\n        },\n        end: {\n          line: 9,\n          column: 29\n        }\n      },\n      \"2\": {\n        start: {\n          line: 10,\n          column: 8\n        },\n        end: {\n          line: 10,\n          column: 25\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 11,\n          column: 57\n        }\n      },\n      \"4\": {\n        start: {\n          line: 12,\n          column: 8\n        },\n        end: {\n          line: 18,\n          column: 10\n        }\n      },\n      \"5\": {\n        start: {\n          line: 19,\n          column: 8\n        },\n        end: {\n          line: 19,\n          column: 51\n        }\n      },\n      \"6\": {\n        start: {\n          line: 20,\n          column: 8\n        },\n        end: {\n          line: 25,\n          column: 11\n        }\n      },\n      \"7\": {\n        start: {\n          line: 20,\n          column: 34\n        },\n        end: {\n          line: 25,\n          column: 9\n        }\n      },\n      \"8\": {\n        start: {\n          line: 28,\n          column: 8\n        },\n        end: {\n          line: 34,\n          column: 9\n        }\n      },\n      \"9\": {\n        start: {\n          line: 29,\n          column: 12\n        },\n        end: {\n          line: 29,\n          column: 69\n        }\n      },\n      \"10\": {\n        start: {\n          line: 32,\n          column: 12\n        },\n        end: {\n          line: 33,\n          column: 46\n        }\n      },\n      \"11\": {\n        start: {\n          line: 35,\n          column: 8\n        },\n        end: {\n          line: 35,\n          column: 77\n        }\n      },\n      \"12\": {\n        start: {\n          line: 39,\n          column: 8\n        },\n        end: {\n          line: 39,\n          column: 37\n        }\n      },\n      \"13\": {\n        start: {\n          line: 40,\n          column: 8\n        },\n        end: {\n          line: 41,\n          column: 48\n        }\n      },\n      \"14\": {\n        start: {\n          line: 49,\n          column: 8\n        },\n        end: {\n          line: 51,\n          column: 58\n        }\n      },\n      \"15\": {\n        start: {\n          line: 55,\n          column: 8\n        },\n        end: {\n          line: 55,\n          column: 50\n        }\n      },\n      \"16\": {\n        start: {\n          line: 56,\n          column: 8\n        },\n        end: {\n          line: 56,\n          column: 32\n        }\n      },\n      \"17\": {\n        start: {\n          line: 57,\n          column: 8\n        },\n        end: {\n          line: 70,\n          column: 11\n        }\n      },\n      \"18\": {\n        start: {\n          line: 58,\n          column: 12\n        },\n        end: {\n          line: 58,\n          column: 52\n        }\n      },\n      \"19\": {\n        start: {\n          line: 59,\n          column: 12\n        },\n        end: {\n          line: 59,\n          column: 59\n        }\n      },\n      \"20\": {\n        start: {\n          line: 60,\n          column: 12\n        },\n        end: {\n          line: 60,\n          column: 29\n        }\n      },\n      \"21\": {\n        start: {\n          line: 61,\n          column: 12\n        },\n        end: {\n          line: 68,\n          column: 13\n        }\n      },\n      \"22\": {\n        start: {\n          line: 62,\n          column: 16\n        },\n        end: {\n          line: 62,\n          column: 43\n        }\n      },\n      \"23\": {\n        start: {\n          line: 63,\n          column: 16\n        },\n        end: {\n          line: 63,\n          column: 48\n        }\n      },\n      \"24\": {\n        start: {\n          line: 65,\n          column: 17\n        },\n        end: {\n          line: 68,\n          column: 13\n        }\n      },\n      \"25\": {\n        start: {\n          line: 66,\n          column: 16\n        },\n        end: {\n          line: 66,\n          column: 45\n        }\n      },\n      \"26\": {\n        start: {\n          line: 67,\n          column: 16\n        },\n        end: {\n          line: 67,\n          column: 50\n        }\n      },\n      \"27\": {\n        start: {\n          line: 69,\n          column: 12\n        },\n        end: {\n          line: 69,\n          column: 56\n        }\n      },\n      \"28\": {\n        start: {\n          line: 73,\n          column: 8\n        },\n        end: {\n          line: 73,\n          column: 53\n        }\n      },\n      \"29\": {\n        start: {\n          line: 77,\n          column: 8\n        },\n        end: {\n          line: 79,\n          column: 58\n        }\n      },\n      \"30\": {\n        start: {\n          line: 83,\n          column: 8\n        },\n        end: {\n          line: 83,\n          column: 29\n        }\n      },\n      \"31\": {\n        start: {\n          line: 88,\n          column: 8\n        },\n        end: {\n          line: 90,\n          column: 58\n        }\n      },\n      \"32\": {\n        start: {\n          line: 93,\n          column: 8\n        },\n        end: {\n          line: 94,\n          column: 70\n        }\n      },\n      \"33\": {\n        start: {\n          line: 98,\n          column: 8\n        },\n        end: {\n          line: 100,\n          column: 58\n        }\n      },\n      \"34\": {\n        start: {\n          line: 103,\n          column: 8\n        },\n        end: {\n          line: 104,\n          column: 80\n        }\n      },\n      \"35\": {\n        start: {\n          line: 107,\n          column: 0\n        },\n        end: {\n          line: 110,\n          column: 2\n        }\n      },\n      \"36\": {\n        start: {\n          line: 107,\n          column: 35\n        },\n        end: {\n          line: 110,\n          column: 1\n        }\n      },\n      \"37\": {\n        start: {\n          line: 111,\n          column: 0\n        },\n        end: {\n          line: 115,\n          column: 16\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 8,\n            column: 4\n          },\n          end: {\n            line: 8,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 8,\n            column: 30\n          },\n          end: {\n            line: 26,\n            column: 5\n          }\n        },\n        line: 8\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 27\n          },\n          end: {\n            line: 20,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 34\n          },\n          end: {\n            line: 25,\n            column: 9\n          }\n        },\n        line: 20\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 27,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 23\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        },\n        line: 27\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 38,\n            column: 4\n          },\n          end: {\n            line: 38,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 38,\n            column: 20\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        },\n        line: 38\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 48,\n            column: 4\n          },\n          end: {\n            line: 48,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 48,\n            column: 18\n          },\n          end: {\n            line: 52,\n            column: 5\n          }\n        },\n        line: 48\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 54,\n            column: 4\n          },\n          end: {\n            line: 54,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 54,\n            column: 18\n          },\n          end: {\n            line: 71,\n            column: 5\n          }\n        },\n        line: 54\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 57,\n            column: 33\n          },\n          end: {\n            line: 57,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 57,\n            column: 42\n          },\n          end: {\n            line: 70,\n            column: 9\n          }\n        },\n        line: 57\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 72,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 72,\n            column: 17\n          },\n          end: {\n            line: 74,\n            column: 5\n          }\n        },\n        line: 72\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 76,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 76,\n            column: 14\n          },\n          end: {\n            line: 80,\n            column: 5\n          }\n        },\n        line: 76\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 82,\n            column: 4\n          },\n          end: {\n            line: 82,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 82,\n            column: 13\n          },\n          end: {\n            line: 85,\n            column: 5\n          }\n        },\n        line: 82\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 87,\n            column: 4\n          },\n          end: {\n            line: 87,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 87,\n            column: 18\n          },\n          end: {\n            line: 91,\n            column: 5\n          }\n        },\n        line: 87\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 92,\n            column: 4\n          },\n          end: {\n            line: 92,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 92,\n            column: 19\n          },\n          end: {\n            line: 95,\n            column: 5\n          }\n        },\n        line: 92\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 97,\n            column: 4\n          },\n          end: {\n            line: 97,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 97,\n            column: 16\n          },\n          end: {\n            line: 101,\n            column: 5\n          }\n        },\n        line: 97\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 102,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 102,\n            column: 37\n          },\n          end: {\n            line: 105,\n            column: 5\n          }\n        },\n        line: 102\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 107,\n            column: 29\n          },\n          end: {\n            line: 107,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 107,\n            column: 35\n          },\n          end: {\n            line: 110,\n            column: 1\n          }\n        },\n        line: 107\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 28,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 28,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 13\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        }],\n        line: 28\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 61,\n            column: 12\n          },\n          end: {\n            line: 68,\n            column: 13\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 61,\n            column: 12\n          },\n          end: {\n            line: 68,\n            column: 13\n          }\n        }, {\n          start: {\n            line: 65,\n            column: 17\n          },\n          end: {\n            line: 68,\n            column: 13\n          }\n        }],\n        line: 61\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 65,\n            column: 17\n          },\n          end: {\n            line: 68,\n            column: 13\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 65,\n            column: 17\n          },\n          end: {\n            line: 68,\n            column: 13\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 65\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"auth.service.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\_services\\\\auth.service.ts\"],\n      names: [],\n      mappings: \"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\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\r\\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\\r\\nimport { Observable, throwError } from 'rxjs';\\r\\nimport { retry, catchError } from 'rxjs/operators';\\r\\nimport { Router } from '@angular/router';\\r\\n\\r\\nimport { LoginResponse, LoginPayload, User, Roles, Products, NewOrder, OrderInfo, Status } from '../interface/loginInterface';\\r\\n\\r\\n@Injectable({\\r\\n  providedIn: 'root'\\r\\n})\\r\\n\\r\\nexport class AuthService {\\r\\n\\r\\n  private basePath = 'https://bbqueen.herokuapp.com/';\\r\\n  public user = {\\r\\n    email: '',\\r\\n    roles: {\\r\\n      admin: false,\\r\\n      name: '',\\r\\n    },\\r\\n  }\\r\\n\\r\\n  constructor(\\r\\n    private router: Router,\\r\\n    private http: HttpClient,\\r\\n  ) { \\r\\n  }\\r\\n  \\r\\n  token = localStorage.getItem('token')\\r\\n  \\r\\n  httpOptions = () => ({\\r\\n    headers: new HttpHeaders({\\r\\n      'Content-Type': 'application/json',\\r\\n      'Authorization' : `Bearer ${this.token}`\\r\\n    })\\r\\n  });\\r\\n\\r\\n  handleError(error: HttpErrorResponse) {\\r\\n    if (error.error instanceof ErrorEvent) {\\r\\n      console.error('An error occurred:', error.error.message);\\r\\n    } else {\\r\\n      console.error(\\r\\n        `Backend returned code ${error.status}, ` +\\r\\n        `body was: ${error.message}`);\\r\\n    }\\r\\n    return throwError(\\r\\n      'Something bad happened; please try again later.');\\r\\n  }\\r\\n\\r\\n  // Get email and password from server to capture the token\\r\\n  loginForm(data: LoginPayload): Observable <LoginResponse> {\\r\\n   this.user.email= data.email\\r\\n   return this.http\\r\\n      .post<LoginResponse>(this.basePath + 'auth', data)\\r\\n      // .pipe(\\r\\n      //   retry(2),\\r\\n      //   catchError(this.handleError)\\r\\n      // );\\r\\n  }\\r\\n\\r\\n    // Get data from backend (users object)\\r\\n    getData(data: LoginPayload): Observable<LoginResponse> {\\r\\n      return this.http\\r\\n        .post<LoginResponse>(this.basePath + 'users', data, this.httpOptions())\\r\\n        .pipe(\\r\\n          retry(2),\\r\\n          catchError(this.handleError)\\r\\n        );\\r\\n    }\\r\\n\\r\\n  //  After login save token and other values(if any) in localStorage\\r\\n  setUser(resp: LoginResponse) {\\r\\n    localStorage.setItem('token', resp.token);\\r\\n    this.token = resp.token\\r\\n    this.getUser().subscribe((res) => {\\r\\n      localStorage.setItem('idUser', res._id);\\r\\n      localStorage.setItem('username', res.nameUser)\\r\\n     console.log(res)\\r\\n      if (res.roles.name === 'chef') {\\r\\n        console.log('Log in chef')\\r\\n        this.router.navigate(['/chef']);\\r\\n      } else if (res.roles.name === 'meserx') {\\r\\n        console.log('Log in meserx')\\r\\n        this.router.navigate(['/waiter'])\\r\\n      }\\r\\n      localStorage.setItem('rol', res.roles.name);\\r\\n    })\\r\\n    \\r\\n  }\\r\\n\\r\\n  isLoggedIn() {\\r\\n    return localStorage.getItem('token') != null;\\r\\n  }\\r\\n\\r\\n  // Captures the email address to identify which user is logging in\\r\\n  getUser(): Observable<User> {\\r\\n    return this.http\\r\\n    .get<User>(this.basePath + `users/${this.user.email}`, this.httpOptions())\\r\\n    .pipe(\\r\\n      retry(2),\\r\\n      catchError(this.handleError)\\r\\n    );\\r\\n  }\\r\\n\\r\\n  // After clearing localStorage redirect to login screen\\r\\n  logout() {\\r\\n    localStorage.clear();\\r\\n    // this.router.navigate(['Home/aboutus']);\\r\\n  }\\r\\n\\r\\n  // Get json with all products\\r\\n  getProducts(): Observable<Products> {\\r\\n    return this.http\\r\\n    .get<Products>(this.basePath + 'products?limit=12', this.httpOptions())\\r\\n    .pipe(\\r\\n      retry(2),\\r\\n      catchError(this.handleError)\\r\\n    );\\r\\n  }\\r\\n\\r\\n  newOrder(data: OrderInfo): Observable<NewOrder> {\\r\\n    return this.http\\r\\n    .post<NewOrder>(this.basePath+ 'orders', data, this.httpOptions())\\r\\n  }\\r\\n\\r\\n  // Get json with all orders\\r\\n  getOrders(): Observable<NewOrder> {\\r\\n    return this.http\\r\\n    .get<NewOrder>(this.basePath + 'orders?limit=100', this.httpOptions())\\r\\n    .pipe(\\r\\n      retry(2),\\r\\n      catchError(this.handleError)\\r\\n    )\\r\\n  }\\r\\n\\r\\n  changeStatusOrder(idOrder: string, data: Status ): Observable<NewOrder> {\\r\\n    return this.http\\r\\n    .put<NewOrder>(this.basePath+ `orders/${idOrder}`, data, this.httpOptions())\\r\\n  }\\r\\n\\r\\n\\r\\n}\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"201c588d3523d88b56ca1b9515fe51302b9e63ef\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2oqq1xa99v = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2oqq1xa99v();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\ncov_2oqq1xa99v().s[0]++;\nlet AuthService = class AuthService {\n  constructor(router, http) {\n    cov_2oqq1xa99v().f[0]++;\n    cov_2oqq1xa99v().s[1]++;\n    this.router = router;\n    cov_2oqq1xa99v().s[2]++;\n    this.http = http;\n    cov_2oqq1xa99v().s[3]++;\n    this.basePath = 'https://bbqueen.herokuapp.com/';\n    cov_2oqq1xa99v().s[4]++;\n    this.user = {\n      email: '',\n      roles: {\n        admin: false,\n        name: ''\n      }\n    };\n    cov_2oqq1xa99v().s[5]++;\n    this.token = localStorage.getItem('token');\n    cov_2oqq1xa99v().s[6]++;\n\n    this.httpOptions = () => {\n      cov_2oqq1xa99v().f[1]++;\n      cov_2oqq1xa99v().s[7]++;\n      return {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.token}`\n        })\n      };\n    };\n  }\n\n  handleError(error) {\n    cov_2oqq1xa99v().f[2]++;\n    cov_2oqq1xa99v().s[8]++;\n\n    if (error.error instanceof ErrorEvent) {\n      cov_2oqq1xa99v().b[0][0]++;\n      cov_2oqq1xa99v().s[9]++;\n      console.error('An error occurred:', error.error.message);\n    } else {\n      cov_2oqq1xa99v().b[0][1]++;\n      cov_2oqq1xa99v().s[10]++;\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.message}`);\n    }\n\n    cov_2oqq1xa99v().s[11]++;\n    return throwError('Something bad happened; please try again later.');\n  } // Get email and password from server to capture the token\n\n\n  loginForm(data) {\n    cov_2oqq1xa99v().f[3]++;\n    cov_2oqq1xa99v().s[12]++;\n    this.user.email = data.email;\n    cov_2oqq1xa99v().s[13]++;\n    return this.http.post(this.basePath + 'auth', data); // .pipe(\n    //   retry(2),\n    //   catchError(this.handleError)\n    // );\n  } // Get data from backend (users object)\n\n\n  getData(data) {\n    cov_2oqq1xa99v().f[4]++;\n    cov_2oqq1xa99v().s[14]++;\n    return this.http.post(this.basePath + 'users', data, this.httpOptions()).pipe(retry(2), catchError(this.handleError));\n  } //  After login save token and other values(if any) in localStorage\n\n\n  setUser(resp) {\n    cov_2oqq1xa99v().f[5]++;\n    cov_2oqq1xa99v().s[15]++;\n    localStorage.setItem('token', resp.token);\n    cov_2oqq1xa99v().s[16]++;\n    this.token = resp.token;\n    cov_2oqq1xa99v().s[17]++;\n    this.getUser().subscribe(res => {\n      cov_2oqq1xa99v().f[6]++;\n      cov_2oqq1xa99v().s[18]++;\n      localStorage.setItem('idUser', res._id);\n      cov_2oqq1xa99v().s[19]++;\n      localStorage.setItem('username', res.nameUser);\n      cov_2oqq1xa99v().s[20]++;\n      console.log(res);\n      cov_2oqq1xa99v().s[21]++;\n\n      if (res.roles.name === 'chef') {\n        cov_2oqq1xa99v().b[1][0]++;\n        cov_2oqq1xa99v().s[22]++;\n        console.log('Log in chef');\n        cov_2oqq1xa99v().s[23]++;\n        this.router.navigate(['/chef']);\n      } else {\n        cov_2oqq1xa99v().b[1][1]++;\n        cov_2oqq1xa99v().s[24]++;\n\n        if (res.roles.name === 'meserx') {\n          cov_2oqq1xa99v().b[2][0]++;\n          cov_2oqq1xa99v().s[25]++;\n          console.log('Log in meserx');\n          cov_2oqq1xa99v().s[26]++;\n          this.router.navigate(['/waiter']);\n        } else {\n          cov_2oqq1xa99v().b[2][1]++;\n        }\n      }\n\n      cov_2oqq1xa99v().s[27]++;\n      localStorage.setItem('rol', res.roles.name);\n    });\n  }\n\n  isLoggedIn() {\n    cov_2oqq1xa99v().f[7]++;\n    cov_2oqq1xa99v().s[28]++;\n    return localStorage.getItem('token') != null;\n  } // Captures the email address to identify which user is logging in\n\n\n  getUser() {\n    cov_2oqq1xa99v().f[8]++;\n    cov_2oqq1xa99v().s[29]++;\n    return this.http.get(this.basePath + `users/${this.user.email}`, this.httpOptions()).pipe(retry(2), catchError(this.handleError));\n  } // After clearing localStorage redirect to login screen\n\n\n  logout() {\n    cov_2oqq1xa99v().f[9]++;\n    cov_2oqq1xa99v().s[30]++;\n    localStorage.clear(); // this.router.navigate(['Home/aboutus']);\n  } // Get json with all products\n\n\n  getProducts() {\n    cov_2oqq1xa99v().f[10]++;\n    cov_2oqq1xa99v().s[31]++;\n    return this.http.get(this.basePath + 'products?limit=12', this.httpOptions()).pipe(retry(2), catchError(this.handleError));\n  }\n\n  newOrder(data) {\n    cov_2oqq1xa99v().f[11]++;\n    cov_2oqq1xa99v().s[32]++;\n    return this.http.post(this.basePath + 'orders', data, this.httpOptions());\n  } // Get json with all orders\n\n\n  getOrders() {\n    cov_2oqq1xa99v().f[12]++;\n    cov_2oqq1xa99v().s[33]++;\n    return this.http.get(this.basePath + 'orders?limit=100', this.httpOptions()).pipe(retry(2), catchError(this.handleError));\n  }\n\n  changeStatusOrder(idOrder, data) {\n    cov_2oqq1xa99v().f[13]++;\n    cov_2oqq1xa99v().s[34]++;\n    return this.http.put(this.basePath + `orders/${idOrder}`, data, this.httpOptions());\n  }\n\n};\ncov_2oqq1xa99v().s[35]++;\n\nAuthService.ctorParameters = () => {\n  cov_2oqq1xa99v().f[14]++;\n  cov_2oqq1xa99v().s[36]++;\n  return [{\n    type: Router\n  }, {\n    type: HttpClient\n  }];\n};\n\ncov_2oqq1xa99v().s[37]++;\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"sources":["C:/Users/PC/LIM016-burger-queen/src/app/_services/auth.service.ts"],"names":["__decorate","Injectable","HttpClient","HttpHeaders","throwError","retry","catchError","Router","AuthService","constructor","router","http","basePath","user","email","roles","admin","name","token","localStorage","getItem","httpOptions","headers","handleError","error","ErrorEvent","console","message","status","loginForm","data","post","getData","pipe","setUser","resp","setItem","getUser","subscribe","res","_id","nameUser","log","navigate","isLoggedIn","get","logout","clear","getProducts","newOrder","getOrders","changeStatusOrder","idOrder","put","ctorParameters","type","providedIn"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nlet AuthService = class AuthService {\r\n    constructor(router, http) {\r\n        this.router = router;\r\n        this.http = http;\r\n        this.basePath = 'https://bbqueen.herokuapp.com/';\r\n        this.user = {\r\n            email: '',\r\n            roles: {\r\n                admin: false,\r\n                name: '',\r\n            },\r\n        };\r\n        this.token = localStorage.getItem('token');\r\n        this.httpOptions = () => ({\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${this.token}`\r\n            })\r\n        });\r\n    }\r\n    handleError(error) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            console.error('An error occurred:', error.error.message);\r\n        }\r\n        else {\r\n            console.error(`Backend returned code ${error.status}, ` +\r\n                `body was: ${error.message}`);\r\n        }\r\n        return throwError('Something bad happened; please try again later.');\r\n    }\r\n    // Get email and password from server to capture the token\r\n    loginForm(data) {\r\n        this.user.email = data.email;\r\n        return this.http\r\n            .post(this.basePath + 'auth', data);\r\n        // .pipe(\r\n        //   retry(2),\r\n        //   catchError(this.handleError)\r\n        // );\r\n    }\r\n    // Get data from backend (users object)\r\n    getData(data) {\r\n        return this.http\r\n            .post(this.basePath + 'users', data, this.httpOptions())\r\n            .pipe(retry(2), catchError(this.handleError));\r\n    }\r\n    //  After login save token and other values(if any) in localStorage\r\n    setUser(resp) {\r\n        localStorage.setItem('token', resp.token);\r\n        this.token = resp.token;\r\n        this.getUser().subscribe((res) => {\r\n            localStorage.setItem('idUser', res._id);\r\n            localStorage.setItem('username', res.nameUser);\r\n            console.log(res);\r\n            if (res.roles.name === 'chef') {\r\n                console.log('Log in chef');\r\n                this.router.navigate(['/chef']);\r\n            }\r\n            else if (res.roles.name === 'meserx') {\r\n                console.log('Log in meserx');\r\n                this.router.navigate(['/waiter']);\r\n            }\r\n            localStorage.setItem('rol', res.roles.name);\r\n        });\r\n    }\r\n    isLoggedIn() {\r\n        return localStorage.getItem('token') != null;\r\n    }\r\n    // Captures the email address to identify which user is logging in\r\n    getUser() {\r\n        return this.http\r\n            .get(this.basePath + `users/${this.user.email}`, this.httpOptions())\r\n            .pipe(retry(2), catchError(this.handleError));\r\n    }\r\n    // After clearing localStorage redirect to login screen\r\n    logout() {\r\n        localStorage.clear();\r\n        // this.router.navigate(['Home/aboutus']);\r\n    }\r\n    // Get json with all products\r\n    getProducts() {\r\n        return this.http\r\n            .get(this.basePath + 'products?limit=12', this.httpOptions())\r\n            .pipe(retry(2), catchError(this.handleError));\r\n    }\r\n    newOrder(data) {\r\n        return this.http\r\n            .post(this.basePath + 'orders', data, this.httpOptions());\r\n    }\r\n    // Get json with all orders\r\n    getOrders() {\r\n        return this.http\r\n            .get(this.basePath + 'orders?limit=100', this.httpOptions())\r\n            .pipe(retry(2), catchError(this.handleError));\r\n    }\r\n    changeStatusOrder(idOrder, data) {\r\n        return this.http\r\n            .put(this.basePath + `orders/${idOrder}`, data, this.httpOptions());\r\n    }\r\n};\r\nAuthService.ctorParameters = () => [\r\n    { type: Router },\r\n    { type: HttpClient }\r\n];\r\nAuthService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    })\r\n], AuthService);\r\nexport { AuthService };\r\n"]},"metadata":{},"sourceType":"module"}