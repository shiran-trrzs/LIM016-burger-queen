{"ast":null,"code":"function cov_2fq9ptnplb() {\n  var path = \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\pipes\\\\sort-orders.pipe.ts\";\n  var hash = \"5830dd030ec6b186e4b3e3027a9544c49f7948a0\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\pipes\\\\sort-orders.pipe.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 21\n        },\n        end: {\n          line: 10,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 25\n        },\n        end: {\n          line: 7,\n          column: 10\n        }\n      },\n      \"2\": {\n        start: {\n          line: 6,\n          column: 12\n        },\n        end: {\n          line: 6,\n          column: 56\n        }\n      },\n      \"3\": {\n        start: {\n          line: 8,\n          column: 8\n        },\n        end: {\n          line: 8,\n          column: 24\n        }\n      },\n      \"4\": {\n        start: {\n          line: 11,\n          column: 0\n        },\n        end: {\n          line: 15,\n          column: 19\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 4,\n            column: 4\n          },\n          end: {\n            line: 4,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 21\n          },\n          end: {\n            line: 9,\n            column: 5\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 36\n          },\n          end: {\n            line: 5,\n            column: 37\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 46\n          },\n          end: {\n            line: 7,\n            column: 9\n          }\n        },\n        line: 5\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 19\n          },\n          end: {\n            line: 6,\n            column: 55\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 49\n          },\n          end: {\n            line: 6,\n            column: 51\n          }\n        }, {\n          start: {\n            line: 6,\n            column: 54\n          },\n          end: {\n            line: 6,\n            column: 55\n          }\n        }],\n        line: 6\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"sort-orders.pipe.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\pipes\\\\sort-orders.pipe.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;IAMvC,cAAc,SAAd,cAAc;IAEzB,SAAS,CAAC,KAAiB;QACzB,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACpC,OAAO,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC9C,CAAC,CAAC,CAAA;QACA,OAAO,QAAQ,CAAA;IACjB,CAAC;CAEF,CAAA;AATY,cAAc;IAH1B,IAAI,CAAC;QACJ,IAAI,EAAE,YAAY;KACnB,CAAC;GACW,cAAc,CAS1B;SATY,cAAc\",\n      sourcesContent: [\"import { Pipe, PipeTransform } from '@angular/core';\\r\\nimport { NewOrder } from '../interface/loginInterface'\\r\\n\\r\\n@Pipe({\\r\\n  name: 'sortOrders'\\r\\n})\\r\\nexport class SortOrdersPipe implements PipeTransform {\\r\\n\\r\\n  transform(value: NewOrder[]): NewOrder[] {\\r\\n    const sortDate = value.sort((a, b) => {\\r\\n     return (a.dateEntry > b.dateEntry) ? -1 : 0\\r\\n  })\\r\\n    return sortDate\\r\\n  }\\r\\n\\r\\n}\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"5830dd030ec6b186e4b3e3027a9544c49f7948a0\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2fq9ptnplb = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2fq9ptnplb();\nimport { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\ncov_2fq9ptnplb().s[0]++;\nlet SortOrdersPipe = class SortOrdersPipe {\n  transform(value) {\n    cov_2fq9ptnplb().f[0]++;\n    const sortDate = (cov_2fq9ptnplb().s[1]++, value.sort((a, b) => {\n      cov_2fq9ptnplb().f[1]++;\n      cov_2fq9ptnplb().s[2]++;\n      return a.dateEntry > b.dateEntry ? (cov_2fq9ptnplb().b[0][0]++, -1) : (cov_2fq9ptnplb().b[0][1]++, 0);\n    }));\n    cov_2fq9ptnplb().s[3]++;\n    return sortDate;\n  }\n\n};\ncov_2fq9ptnplb().s[4]++;\nSortOrdersPipe = __decorate([Pipe({\n  name: 'sortOrders'\n})], SortOrdersPipe);\nexport { SortOrdersPipe };","map":{"version":3,"sources":["C:/Users/PC/LIM016-burger-queen/src/app/pipes/sort-orders.pipe.ts"],"names":["__decorate","Pipe","SortOrdersPipe","transform","value","sortDate","sort","a","b","dateEntry","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;;AACA,IAAIC,cAAc,GAAG,MAAMA,cAAN,CAAqB;AACtCC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAAA;AACb,UAAMC,QAAQ,6BAAGD,KAAK,CAACE,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAA;AAAA;AAClC,aAAQD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAAjB,gCAA8B,CAAC,CAA/B,iCAAmC,CAAnC,CAAP;AACH,KAFgB,CAAH,CAAd;AADa;AAIb,WAAOJ,QAAP;AACH;;AANqC,CAA1C;;AAQAH,cAAc,GAAGF,UAAU,CAAC,CACxBC,IAAI,CAAC;AACDS,EAAAA,IAAI,EAAE;AADL,CAAD,CADoB,CAAD,EAIxBR,cAJwB,CAA3B;AAKA,SAASA,cAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Pipe } from '@angular/core';\r\nlet SortOrdersPipe = class SortOrdersPipe {\r\n    transform(value) {\r\n        const sortDate = value.sort((a, b) => {\r\n            return (a.dateEntry > b.dateEntry) ? -1 : 0;\r\n        });\r\n        return sortDate;\r\n    }\r\n};\r\nSortOrdersPipe = __decorate([\r\n    Pipe({\r\n        name: 'sortOrders'\r\n    })\r\n], SortOrdersPipe);\r\nexport { SortOrdersPipe };\r\n"]},"metadata":{},"sourceType":"module"}