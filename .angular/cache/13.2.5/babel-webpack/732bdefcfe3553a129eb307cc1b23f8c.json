{"ast":null,"code":"function cov_2kzygtn3v3() {\n  var path = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\Laboratoria\\\\LIM016-burger-queen-1\\\\src\\\\app\\\\pipes\\\\filter-orders.pipe.ts\";\n  var hash = \"0adf1411046900de4d4af8e8a6dd0e5e268e3c77\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\Laboratoria\\\\LIM016-burger-queen-1\\\\src\\\\app\\\\pipes\\\\filter-orders.pipe.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 23\n        },\n        end: {\n          line: 14,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 21\n        },\n        end: {\n          line: 5,\n          column: 23\n        }\n      },\n      \"2\": {\n        start: {\n          line: 6,\n          column: 8\n        },\n        end: {\n          line: 11,\n          column: 9\n        }\n      },\n      \"3\": {\n        start: {\n          line: 7,\n          column: 12\n        },\n        end: {\n          line: 7,\n          column: 58\n        }\n      },\n      \"4\": {\n        start: {\n          line: 7,\n          column: 41\n        },\n        end: {\n          line: 7,\n          column: 56\n        }\n      },\n      \"5\": {\n        start: {\n          line: 10,\n          column: 12\n        },\n        end: {\n          line: 10,\n          column: 66\n        }\n      },\n      \"6\": {\n        start: {\n          line: 10,\n          column: 41\n        },\n        end: {\n          line: 10,\n          column: 64\n        }\n      },\n      \"7\": {\n        start: {\n          line: 12,\n          column: 8\n        },\n        end: {\n          line: 12,\n          column: 22\n        }\n      },\n      \"8\": {\n        start: {\n          line: 15,\n          column: 0\n        },\n        end: {\n          line: 19,\n          column: 21\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 4,\n            column: 4\n          },\n          end: {\n            line: 4,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 26\n          },\n          end: {\n            line: 13,\n            column: 5\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 7,\n            column: 34\n          },\n          end: {\n            line: 7,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 7,\n            column: 41\n          },\n          end: {\n            line: 7,\n            column: 56\n          }\n        },\n        line: 7\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 34\n          },\n          end: {\n            line: 10,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 41\n          },\n          end: {\n            line: 10,\n            column: 64\n          }\n        },\n        line: 10\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 8\n          },\n          end: {\n            line: 11,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 8\n          },\n          end: {\n            line: 11,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 13\n          },\n          end: {\n            line: 11,\n            column: 9\n          }\n        }],\n        line: 6\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"filter-orders.pipe.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\Laboratoria\\\\LIM016-burger-queen-1\\\\src\\\\app\\\\pipes\\\\filter-orders.pipe.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;IAMvC,gBAAgB,SAAhB,gBAAgB;IAE3B,SAAS,CAAC,KAAiB,EAAE,GAAW;QACtC,IAAI,MAAM,GAAe,EAAE,CAAA;QAC3B,IAAI,GAAG,IAAI,EAAE,EAAE;YACb,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAW,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAA;SACxD;aAAM;YACL,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,UAAU,CAAC,CAAA;SAC/D;QACD,OAAO,MAAM,CAAA;IACf,CAAC;CAEF,CAAA;AAZY,gBAAgB;IAH5B,IAAI,CAAC;QACJ,IAAI,EAAE,cAAc;KACrB,CAAC;GACW,gBAAgB,CAY5B;SAZY,gBAAgB\",\n      sourcesContent: [\"import { Pipe, PipeTransform } from '@angular/core';\\r\\nimport { NewOrder } from '../interface/loginInterface'\\r\\n\\r\\n@Pipe({\\r\\n  name: 'filterOrders'\\r\\n})\\r\\nexport class FilterOrdersPipe implements PipeTransform {\\r\\n\\r\\n  transform(value: NewOrder[], arg: string): NewOrder[] {\\r\\n    let result: NewOrder[] = []\\r\\n    if (arg != '') {\\r\\n      result = value.filter((e: NewOrder) => e.status == arg)\\r\\n    } else {\\r\\n      result = value.filter((e:NewOrder) => e.status !== 'canceled')\\r\\n    }\\r\\n    return result\\r\\n  }\\r\\n\\r\\n}\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"0adf1411046900de4d4af8e8a6dd0e5e268e3c77\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2kzygtn3v3 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2kzygtn3v3();\nimport { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\ncov_2kzygtn3v3().s[0]++;\nlet FilterOrdersPipe = class FilterOrdersPipe {\n  transform(value, arg) {\n    cov_2kzygtn3v3().f[0]++;\n    let result = (cov_2kzygtn3v3().s[1]++, []);\n    cov_2kzygtn3v3().s[2]++;\n\n    if (arg != '') {\n      cov_2kzygtn3v3().b[0][0]++;\n      cov_2kzygtn3v3().s[3]++;\n      result = value.filter(e => {\n        cov_2kzygtn3v3().f[1]++;\n        cov_2kzygtn3v3().s[4]++;\n        return e.status == arg;\n      });\n    } else {\n      cov_2kzygtn3v3().b[0][1]++;\n      cov_2kzygtn3v3().s[5]++;\n      result = value.filter(e => {\n        cov_2kzygtn3v3().f[2]++;\n        cov_2kzygtn3v3().s[6]++;\n        return e.status !== 'canceled';\n      });\n    }\n\n    cov_2kzygtn3v3().s[7]++;\n    return result;\n  }\n\n};\ncov_2kzygtn3v3().s[8]++;\nFilterOrdersPipe = __decorate([Pipe({\n  name: 'filterOrders'\n})], FilterOrdersPipe);\nexport { FilterOrdersPipe };","map":{"version":3,"sources":["C:/Users/USUARIO/Documents/Laboratoria/LIM016-burger-queen-1/src/app/pipes/filter-orders.pipe.ts"],"names":["__decorate","Pipe","FilterOrdersPipe","transform","value","arg","result","filter","e","status","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,SAAS,CAACC,KAAD,EAAQC,GAAR,EAAa;AAAA;AAClB,QAAIC,MAAM,6BAAG,EAAH,CAAV;AADkB;;AAElB,QAAID,GAAG,IAAI,EAAX,EAAe;AAAA;AAAA;AACXC,MAAAA,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAcC,CAAD,IAAO;AAAA;AAAA;AAAA,eAAAA,CAAC,CAACC,MAAF,IAAYJ,GAAZ;AAAe,OAAnC,CAAT;AACH,KAFD,MAGK;AAAA;AAAA;AACDC,MAAAA,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAcC,CAAD,IAAO;AAAA;AAAA;AAAA,eAAAA,CAAC,CAACC,MAAF,KAAa,UAAb;AAAuB,OAA3C,CAAT;AACH;;AAPiB;AAQlB,WAAOH,MAAP;AACH;;AAVyC,CAA9C;;AAYAJ,gBAAgB,GAAGF,UAAU,CAAC,CAC1BC,IAAI,CAAC;AACDS,EAAAA,IAAI,EAAE;AADL,CAAD,CADsB,CAAD,EAI1BR,gBAJ0B,CAA7B;AAKA,SAASA,gBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Pipe } from '@angular/core';\r\nlet FilterOrdersPipe = class FilterOrdersPipe {\r\n    transform(value, arg) {\r\n        let result = [];\r\n        if (arg != '') {\r\n            result = value.filter((e) => e.status == arg);\r\n        }\r\n        else {\r\n            result = value.filter((e) => e.status !== 'canceled');\r\n        }\r\n        return result;\r\n    }\r\n};\r\nFilterOrdersPipe = __decorate([\r\n    Pipe({\r\n        name: 'filterOrders'\r\n    })\r\n], FilterOrdersPipe);\r\nexport { FilterOrdersPipe };\r\n"]},"metadata":{},"sourceType":"module"}