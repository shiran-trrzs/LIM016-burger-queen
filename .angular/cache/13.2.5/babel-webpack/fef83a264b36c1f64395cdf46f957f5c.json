{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\Laboratoria\\\\LIM016-burger-queen-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { ChefPanelComponent } from './chef-panel.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { Router } from '@angular/router';\ndescribe('ChefPanelComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [ChefPanelComponent],\n      providers: [{\n        provide: Router\n      }],\n      imports: [RouterTestingModule, HttpClientTestingModule],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ChefPanelComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  }); //   it(`should navigate to nocustomer`, () => {\n  //     let x = component.logoutUser()\n  //     let routerSpy = jasmine.createSpy('navigate');\n  //    expect (routerSpy.navigate).toHaveBeenCalledWith(['/']);\n  // });\n});","map":{"version":3,"sources":["C:/Users/USUARIO/Documents/Laboratoria/LIM016-burger-queen-1/src/app/chef-panel/chef-panel.component.spec.ts"],"names":["TestBed","ChefPanelComponent","RouterTestingModule","HttpClientTestingModule","CUSTOM_ELEMENTS_SCHEMA","Router","describe","component","fixture","beforeEach","configureTestingModule","declarations","providers","provide","imports","schemas","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACAC,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACjC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMT,OAAO,CAACU,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACV,kBAAD,CADmB;AAEjCW,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,OAAO,EAAER;AAAX,OADO,CAFsB;AAKjCS,MAAAA,OAAO,EAAE,CACLZ,mBADK,EAELC,uBAFK,CALwB;AASjCY,MAAAA,OAAO,EAAE,CAACX,sBAAD;AATwB,KAA/B,EAWDY,iBAXC,EAAN;AAYH,GAbS,EAAV;AAcAP,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGR,OAAO,CAACiB,eAAR,CAAwBhB,kBAAxB,CAAV;AACAM,IAAAA,SAAS,GAAGC,OAAO,CAACU,iBAApB;AACAV,IAAAA,OAAO,CAACW,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACd,SAAD,CAAN,CAAkBe,UAAlB;AACH,GAFC,CAAF,CAtBiC,CAyBjC;AACA;AACA;AACA;AACA;AACH,CA9BO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { ChefPanelComponent } from './chef-panel.component';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\ndescribe('ChefPanelComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [ChefPanelComponent],\r\n            providers: [\r\n                { provide: Router }\r\n            ],\r\n            imports: [\r\n                RouterTestingModule,\r\n                HttpClientTestingModule\r\n            ],\r\n            schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(ChefPanelComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    //   it(`should navigate to nocustomer`, () => {\r\n    //     let x = component.logoutUser()\r\n    //     let routerSpy = jasmine.createSpy('navigate');\r\n    //    expect (routerSpy.navigate).toHaveBeenCalledWith(['/']);\r\n    // });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}