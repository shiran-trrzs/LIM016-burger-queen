{"ast":null,"code":"function cov_1rgj5qbm8a() {\n  var path = \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\pipes\\\\status-btn.pipe.ts\";\n  var hash = \"0ab491bd841e250b0cf70f43682b6a54069d5231\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\pipes\\\\status-btn.pipe.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 20\n        },\n        end: {\n          line: 8,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 23\n        },\n        end: {\n          line: 5,\n          column: 137\n        }\n      },\n      \"2\": {\n        start: {\n          line: 5,\n          column: 40\n        },\n        end: {\n          line: 5,\n          column: 136\n        }\n      },\n      \"3\": {\n        start: {\n          line: 6,\n          column: 8\n        },\n        end: {\n          line: 6,\n          column: 22\n        }\n      },\n      \"4\": {\n        start: {\n          line: 9,\n          column: 0\n        },\n        end: {\n          line: 13,\n          column: 18\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 4,\n            column: 4\n          },\n          end: {\n            line: 4,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 21\n          },\n          end: {\n            line: 7,\n            column: 5\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 33\n          },\n          end: {\n            line: 5,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 40\n          },\n          end: {\n            line: 5,\n            column: 136\n          }\n        },\n        line: 5\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 5,\n            column: 40\n          },\n          end: {\n            line: 5,\n            column: 136\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 5,\n            column: 67\n          },\n          end: {\n            line: 5,\n            column: 132\n          }\n        }, {\n          start: {\n            line: 5,\n            column: 135\n          },\n          end: {\n            line: 5,\n            column: 136\n          }\n        }],\n        line: 5\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"status-btn.pipe.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\src\\\\app\\\\pipes\\\\status-btn.pipe.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;IAMvC,aAAa,SAAb,aAAa;IAExB,SAAS,CAAC,KAAiB;QACzB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAE,CAAC,CAAC,MAAM,IAAI,YAAY,CAAC,CAAC,iCAAK,CAAC,KAAE,MAAM,EAAE,gBAAgB,IAAE,CAAC,CAAC,CAAC,CAAC,CAAA;QACjG,OAAO,MAAM,CAAA;IACf,CAAC;CAEF,CAAA;AAPY,aAAa;IAHzB,IAAI,CAAC;QACJ,IAAI,EAAE,WAAW;KAClB,CAAC;GACW,aAAa,CAOzB;SAPY,aAAa\",\n      sourcesContent: [\"import { Pipe, PipeTransform } from '@angular/core';\\r\\nimport { NewOrder } from '../interface/loginInterface'\\r\\n\\r\\n@Pipe({\\r\\n  name: 'statusBtn'\\r\\n})\\r\\nexport class StatusBtnPipe implements PipeTransform {\\r\\n\\r\\n  transform(value: NewOrder[]): NewOrder[] {\\r\\n    const result = value.map((e) =>  e.status == 'delivering' ? {...e, status: 'ready to serve'} : e)\\r\\n    return result\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"0ab491bd841e250b0cf70f43682b6a54069d5231\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1rgj5qbm8a = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1rgj5qbm8a();\nimport { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\ncov_1rgj5qbm8a().s[0]++;\nlet StatusBtnPipe = class StatusBtnPipe {\n  transform(value) {\n    cov_1rgj5qbm8a().f[0]++;\n    const result = (cov_1rgj5qbm8a().s[1]++, value.map(e => {\n      cov_1rgj5qbm8a().f[1]++;\n      cov_1rgj5qbm8a().s[2]++;\n      return e.status == 'delivering' ? (cov_1rgj5qbm8a().b[0][0]++, Object.assign(Object.assign({}, e), {\n        status: 'ready to serve'\n      })) : (cov_1rgj5qbm8a().b[0][1]++, e);\n    }));\n    cov_1rgj5qbm8a().s[3]++;\n    return result;\n  }\n\n};\ncov_1rgj5qbm8a().s[4]++;\nStatusBtnPipe = __decorate([Pipe({\n  name: 'statusBtn'\n})], StatusBtnPipe);\nexport { StatusBtnPipe };","map":{"version":3,"sources":["C:/Users/PC/LIM016-burger-queen/src/app/pipes/status-btn.pipe.ts"],"names":["__decorate","Pipe","StatusBtnPipe","transform","value","result","map","e","status","Object","assign","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;;AACA,IAAIC,aAAa,GAAG,MAAMA,aAAN,CAAoB;AACpCC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAAA;AACb,UAAMC,MAAM,6BAAGD,KAAK,CAACE,GAAN,CAAWC,CAAD,IAAO;AAAA;AAAA;AAAA,aAAAA,CAAC,CAACC,MAAF,IAAY,YAAZ,gCAA2BC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,CAAlB,CAAd,EAAoC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAApC,CAA3B,iCAA+FD,CAA/F;AAAgG,KAAjH,CAAH,CAAZ;AADa;AAEb,WAAOF,MAAP;AACH;;AAJmC,CAAxC;;AAMAH,aAAa,GAAGF,UAAU,CAAC,CACvBC,IAAI,CAAC;AACDU,EAAAA,IAAI,EAAE;AADL,CAAD,CADmB,CAAD,EAIvBT,aAJuB,CAA1B;AAKA,SAASA,aAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Pipe } from '@angular/core';\r\nlet StatusBtnPipe = class StatusBtnPipe {\r\n    transform(value) {\r\n        const result = value.map((e) => e.status == 'delivering' ? Object.assign(Object.assign({}, e), { status: 'ready to serve' }) : e);\r\n        return result;\r\n    }\r\n};\r\nStatusBtnPipe = __decorate([\r\n    Pipe({\r\n        name: 'statusBtn'\r\n    })\r\n], StatusBtnPipe);\r\nexport { StatusBtnPipe };\r\n"]},"metadata":{},"sourceType":"module"}