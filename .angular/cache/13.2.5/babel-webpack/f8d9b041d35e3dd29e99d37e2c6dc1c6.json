{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\PC\\\\LIM016-burger-queen\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { FormComponent } from './form.component';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\ndescribe('FormComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [FormComponent],\n      imports: [RouterTestingModule, HttpClientTestingModule, FormsModule, ReactiveFormsModule]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(FormComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('Should return invalid form', () => {\n    const email = component.validateForm.controls['email'];\n    email.setValue('a@burgerland.com');\n    expect(component.validateForm.invalid).toBeTrue();\n  });\n});","map":{"version":3,"sources":["C:/Users/PC/LIM016-burger-queen/src/app/modules/login/form/form.component.spec.ts"],"names":["TestBed","FormComponent","RouterTestingModule","HttpClientTestingModule","FormsModule","ReactiveFormsModule","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","email","validateForm","controls","setValue","invalid","toBeTrue"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,gBAAjD;AACAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC5B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMT,OAAO,CAACU,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CACVV,aADU,CADmB;AAIjCW,MAAAA,OAAO,EAAE,CACLV,mBADK,EAELC,uBAFK,EAGLC,WAHK,EAILC,mBAJK;AAJwB,KAA/B,EAWDQ,iBAXC,EAAN;AAYH,GAbS,EAAV;AAcAJ,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGR,OAAO,CAACc,eAAR,CAAwBb,aAAxB,CAAV;AACAM,IAAAA,SAAS,GAAGC,OAAO,CAACO,iBAApB;AACAP,IAAAA,OAAO,CAACQ,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACX,SAAD,CAAN,CAAkBY,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACnC,UAAMG,KAAK,GAAGb,SAAS,CAACc,YAAV,CAAuBC,QAAvB,CAAgC,OAAhC,CAAd;AACAF,IAAAA,KAAK,CAACG,QAAN,CAAe,kBAAf;AACAL,IAAAA,MAAM,CAACX,SAAS,CAACc,YAAV,CAAuBG,OAAxB,CAAN,CAAuCC,QAAvC;AACH,GAJC,CAAF;AAKH,CA9BO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { FormComponent } from './form.component';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\ndescribe('FormComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [\r\n                FormComponent\r\n            ],\r\n            imports: [\r\n                RouterTestingModule,\r\n                HttpClientTestingModule,\r\n                FormsModule,\r\n                ReactiveFormsModule\r\n            ]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(FormComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('Should return invalid form', () => {\r\n        const email = component.validateForm.controls['email'];\r\n        email.setValue('a@burgerland.com');\r\n        expect(component.validateForm.invalid).toBeTrue();\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}