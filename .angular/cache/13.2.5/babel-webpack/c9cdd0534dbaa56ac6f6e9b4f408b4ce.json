{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModulesModule } from './modules/modules.module';\nimport { HttpClientModule } from '@angular/common/http'; // to make HTTP calls\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nimport * as i2 from \"@auth0/angular-jwt\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[AppRoutingModule, ModulesModule, HttpClientModule, BrowserModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }), BrowserAnimationsModule, JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('token');\n        }\n      }\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}